// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Modello per i prodotti
model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Float     // Modificato da Decimal a Float per SQLite
  category    String?
  imageUrl    String?
  sku         String    @unique
  stock       Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  isDeleted   Boolean   @default(false)
  
  orderItems  OrderItem[]
  reviews     Review[]
}

// Modello per gli utenti
model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String?
  address   String?
  city      String?
  postCode  String?
  country   String?
  phone     String?
  isAdmin   Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  isDeleted Boolean   @default(false)
  orders    Order[]
  reviews   Review[]
}

// Modello per gli ordini
model Order {
  id              Int         @id @default(autoincrement())
  user            User?       @relation(fields: [userId], references: [id])
  userId          Int?
  orderItems      OrderItem[]
  status          String      @default("IN_ELABORAZIONE") // Valori possibili: IN_ELABORAZIONE, SPEDITO, CONSEGNATO, ANNULLATO
  shippingAddress String?
  shippingCity    String?
  shippingPostCode String?
  shippingCountry String?
  paymentMethod   String?
  paymentStatus   String?     @default("pending") // pending, paid, failed, refunded
  total           Float       // Modificato da Decimal a Float per SQLite
  stripePaymentId String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  isDeleted       Boolean     @default(false)
}

// Modello per gli elementi dell'ordine
model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float   // Modificato da Decimal a Float per SQLite
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean  @default(false)

  @@unique([orderId, productId])
}

model Review {
  id          Int       @id @default(autoincrement())
  productId   Int
  userId      Int
  rating      Int       // da 1 a 5
  comment     String
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  product     Product   @relation(fields: [productId], references: [id])
} 